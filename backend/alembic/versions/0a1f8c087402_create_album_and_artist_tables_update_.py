"""Create album and artist tables, update songs and users

Revision ID: 0a1f8c087402
Revises: b22816844690
Create Date: 2025-08-10 21:25:37.874071

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0a1f8c087402'
down_revision: Union[str, Sequence[str], None] = 'b22816844690'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist_name', sa.String(length=100), nullable=False),
    sa.Column('spotify_artist_id', sa.String(length=100), nullable=False),
    sa.Column('popularity', sa.Integer(), nullable=True),
    sa.Column('followers', sa.Integer(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artists_artist_name'), 'artists', ['artist_name'], unique=True)
    op.create_index(op.f('ix_artists_spotify_artist_id'), 'artists', ['spotify_artist_id'], unique=True)
    op.create_table('albums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('primary_artist_id', sa.Integer(), nullable=False),
    sa.Column('spotify_album_id', sa.String(length=100), nullable=False),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(length=50), nullable=True),
    sa.Column('features', sa.String(length=200), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['primary_artist_id'], ['artists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_albums_features'), 'albums', ['features'], unique=False)
    op.create_index(op.f('ix_albums_primary_artist_id'), 'albums', ['primary_artist_id'], unique=False)
    op.create_index(op.f('ix_albums_spotify_album_id'), 'albums', ['spotify_album_id'], unique=True)
    op.add_column('songs', sa.Column('artist_id', sa.Integer(), nullable=False))
    op.add_column('songs', sa.Column('album_id', sa.Integer(), nullable=False))
    op.add_column('songs', sa.Column('features', sa.String(length=200), nullable=True))
    op.alter_column('songs', 'spotify_id',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_index(op.f('ix_songs_artist_name'), table_name='songs')
    op.drop_index(op.f('ix_songs_id'), table_name='songs')
    op.create_index(op.f('ix_songs_album_id'), 'songs', ['album_id'], unique=False)
    op.create_index(op.f('ix_songs_artist_id'), 'songs', ['artist_id'], unique=False)
    op.create_index(op.f('ix_songs_features'), 'songs', ['features'], unique=False)
    op.create_foreign_key(None, 'songs', 'albums', ['album_id'], ['id'])
    op.create_foreign_key(None, 'songs', 'artists', ['artist_id'], ['id'])
    op.drop_column('songs', 'album_name')
    op.drop_column('songs', 'duration_ms')
    op.drop_column('songs', 'artist_name')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.drop_index(op.f('ix_users_id'), table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.add_column('songs', sa.Column('artist_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('songs', sa.Column('duration_ms', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('album_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'songs', type_='foreignkey')
    op.drop_constraint(None, 'songs', type_='foreignkey')
    op.drop_index(op.f('ix_songs_features'), table_name='songs')
    op.drop_index(op.f('ix_songs_artist_id'), table_name='songs')
    op.drop_index(op.f('ix_songs_album_id'), table_name='songs')
    op.create_index(op.f('ix_songs_id'), 'songs', ['id'], unique=False)
    op.create_index(op.f('ix_songs_artist_name'), 'songs', ['artist_name'], unique=False)
    op.alter_column('songs', 'spotify_id',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('songs', 'features')
    op.drop_column('songs', 'album_id')
    op.drop_column('songs', 'artist_id')
    op.drop_index(op.f('ix_albums_spotify_album_id'), table_name='albums')
    op.drop_index(op.f('ix_albums_primary_artist_id'), table_name='albums')
    op.drop_index(op.f('ix_albums_features'), table_name='albums')
    op.drop_table('albums')
    op.drop_index(op.f('ix_artists_spotify_artist_id'), table_name='artists')
    op.drop_index(op.f('ix_artists_artist_name'), table_name='artists')
    op.drop_table('artists')
    # ### end Alembic commands ###
